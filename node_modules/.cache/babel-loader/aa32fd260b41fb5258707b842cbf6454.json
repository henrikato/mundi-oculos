{"ast":null,"code":"import _defineProperty from \"/Volumes/HDD/Users/henrikato/Desktop/Faculdade/4\\xBA Semestre/Gesta\\u0303o da Informac\\u0327a\\u0303o e Intelige\\u0302ncia Competitiva - Navarro/MVP/mundi_oculos/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Volumes/HDD/Users/henrikato/Desktop/Faculdade/4\\xBA Semestre/Gesta\\u0303o da Informac\\u0327a\\u0303o e Intelige\\u0302ncia Competitiva - Navarro/MVP/mundi_oculos/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/HDD/Users/henrikato/Desktop/Faculdade/4\\xBA Semestre/Gesta\\u0303o da Informac\\u0327a\\u0303o e Intelige\\u0302ncia Competitiva - Navarro/MVP/mundi_oculos/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/HDD/Users/henrikato/Desktop/Faculdade/4\\xBA Semestre/Gesta\\u0303o da Informac\\u0327a\\u0303o e Intelige\\u0302ncia Competitiva - Navarro/MVP/mundi_oculos/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/HDD/Users/henrikato/Desktop/Faculdade/4\\xBA Semestre/Gesta\\u0303o da Informac\\u0327a\\u0303o e Intelige\\u0302ncia Competitiva - Navarro/MVP/mundi_oculos/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/HDD/Users/henrikato/Desktop/Faculdade/4\\xBA Semestre/Gesta\\u0303o da Informac\\u0327a\\u0303o e Intelige\\u0302ncia Competitiva - Navarro/MVP/mundi_oculos/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Volumes/HDD/Users/henrikato/Desktop/Faculdade/4\\xBA Semestre/Gesta\\u0303o da Informac\\u0327a\\u0303o e Intelige\\u0302ncia Competitiva - Navarro/MVP/mundi_oculos/src/app/templates/Dashboard/Graficos.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport Moment from 'moment';\nimport Chart from 'chart.js';\nimport MockDadosChart from 'app/mocks/MockDadosChart';\n\nvar GeraChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GeraChart, _Component);\n\n  function GeraChart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GeraChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GeraChart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this._geraRGBRandom = function (callback) {\n      var r = Math.random() * 255 + 1,\n          g = Math.random() * 255 + 1,\n          b = Math.random() * 255 + 1;\n\n      if (typeof callback === 'function') {\n        return callback(r, g, b);\n      } else {\n        return [r, g, b];\n      }\n    };\n\n    _this.componentDidMount = function () {\n      var dataSet = require('../../mocks/ojogo');\n\n      var labelsChart = _.map(dataSet.registros, function (registro) {\n        return Moment(registro.dia + \" \" + registro.hora).format(\"MM/DD/YYYY HH:mm[h]\");\n      });\n\n      var dadosChart = _.map(dataSet.registros, function (registro) {\n        return registro.termos;\n      });\n\n      var _datasets = [];\n\n      _.map(dadosChart[0], function (item, palavraChave) {\n        var elementos = [];\n\n        _.find(dadosChart, function (itens) {\n          elementos.push(itens[palavraChave]);\n        });\n\n        _datasets.push(_defineProperty({}, palavraChave, elementos));\n      });\n\n      var canvas = document.getElementById(\"chart\");\n      var chart = new Chart(canvas, {\n        type: \"line\",\n        data: {\n          labels: labelsChart,\n          datasets: _datasets.map(function (dataset) {\n            var bgLinha, bordaLinha, bgPonto, bordaPonto;\n\n            _this._geraRGBRandom(function (r, g, b) {\n              bgLinha = \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", .1)\");\n              bordaLinha = \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", 1)\");\n            });\n\n            _this._geraRGBRandom(function (r, g, b) {\n              bgPonto = \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", .3)\");\n              bordaPonto = \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", 1)\");\n            });\n\n            return {\n              label: Object.keys(dataset)[0],\n              data: Object.values(dataset)[0],\n              backgroundColor: bgLinha,\n              borderColor: bordaLinha,\n              pointBackgroundColor: bgPonto,\n              pointBorderColor: bordaPonto,\n              pointBorderWidth: 2,\n              pointHoverBackgroundColor: bgPonto,\n              pointHoverBorderColor: bordaPonto,\n              pointHoverBorderWidth: 2,\n              borderWidth: 2,\n              pointRadius: 5\n            };\n          })\n        },\n        options: {\n          elements: {\n            line: {\n              tension: 0\n            }\n          }\n        }\n      });\n      chart.render({\n        duration: 600,\n        lazy: false,\n        easing: \"easeOutExpo\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(GeraChart, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"canvas\", {\n        id: \"chart\",\n        width: this.props.largura,\n        height: this.props.altura,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return GeraChart;\n}(Component);\n\nvar ViewGraficos =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(ViewGraficos, _Component2);\n\n  function ViewGraficos() {\n    _classCallCheck(this, ViewGraficos);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ViewGraficos).apply(this, arguments));\n  }\n\n  _createClass(ViewGraficos, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.visivel) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"grafico\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(GeraChart, {\n          dados: MockDadosChart,\n          largura: \"200\",\n          altura: \"100\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        })));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        });\n      }\n    }\n  }]);\n\n  return ViewGraficos;\n}(Component);\n\nexport default ViewGraficos;","map":{"version":3,"sources":["/Volumes/HDD/Users/henrikato/Desktop/Faculdade/4º Semestre/Gestão da Informação e Inteligência Competitiva - Navarro/MVP/mundi_oculos/src/app/templates/Dashboard/Graficos.js"],"names":["React","Component","_","Moment","Chart","MockDadosChart","GeraChart","_geraRGBRandom","callback","r","Math","random","g","b","componentDidMount","dataSet","require","labelsChart","map","registros","registro","dia","hora","format","dadosChart","termos","_datasets","item","palavraChave","elementos","find","itens","push","canvas","document","getElementById","chart","type","data","labels","datasets","dataset","bgLinha","bordaLinha","bgPonto","bordaPonto","label","Object","keys","values","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","borderWidth","pointRadius","options","elements","line","tension","render","duration","lazy","easing","props","largura","altura","ViewGraficos","visivel"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;;IAEMC,S;;;;;;;;;;;;;;;;;;UACFC,c,GAAiB,UAACC,QAAD,EAAc;AAC3B,UAAIC,CAAC,GAAGC,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsB,CAA9B;AAAA,UAAiCC,CAAC,GAAGF,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsB,CAA3D;AAAA,UAA8DE,CAAC,GAAGH,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsB,CAAxF;;AACA,UAAI,OAAOH,QAAP,KAAoB,UAAxB,EAAoC;AAChC,eAAOA,QAAQ,CAACC,CAAD,EAAIG,CAAJ,EAAOC,CAAP,CAAf;AACH,OAFD,MAEO;AACH,eAAO,CAACJ,CAAD,EAAIG,CAAJ,EAAOC,CAAP,CAAP;AACH;AACJ,K;;UAEDC,iB,GAAoB,YAAM;AACtB,UAAIC,OAAO,GAAGC,OAAO,CAAC,mBAAD,CAArB;;AACA,UAAIC,WAAW,GAAGf,CAAC,CAACgB,GAAF,CAAMH,OAAO,CAACI,SAAd,EAAyB,UAACC,QAAD,EAAc;AACrD,eAAOjB,MAAM,CAACiB,QAAQ,CAACC,GAAT,GAAe,GAAf,GAAqBD,QAAQ,CAACE,IAA/B,CAAN,CAA2CC,MAA3C,CAAkD,qBAAlD,CAAP;AACH,OAFiB,CAAlB;;AAGA,UAAIC,UAAU,GAAGtB,CAAC,CAACgB,GAAF,CAAMH,OAAO,CAACI,SAAd,EAAyB,UAACC,QAAD,EAAc;AAAE,eAAOA,QAAQ,CAACK,MAAhB;AAAwB,OAAjE,CAAjB;;AAEA,UAAIC,SAAS,GAAG,EAAhB;;AACAxB,MAAAA,CAAC,CAACgB,GAAF,CAAMM,UAAU,CAAC,CAAD,CAAhB,EAAqB,UAACG,IAAD,EAAOC,YAAP,EAAwB;AACzC,YAAIC,SAAS,GAAG,EAAhB;;AACA3B,QAAAA,CAAC,CAAC4B,IAAF,CAAON,UAAP,EAAmB,UAACO,KAAD,EAAW;AAC1BF,UAAAA,SAAS,CAACG,IAAV,CAAeD,KAAK,CAACH,YAAD,CAApB;AACH,SAFD;;AAGAF,QAAAA,SAAS,CAACM,IAAV,qBAAiBJ,YAAjB,EAAgCC,SAAhC;AACH,OAND;;AAQA,UAAII,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAb;AACA,UAAIC,KAAK,GAAG,IAAIhC,KAAJ,CAAU6B,MAAV,EAAkB;AAC1BI,QAAAA,IAAI,EAAE,MADoB;AAE1BC,QAAAA,IAAI,EAAE;AACFC,UAAAA,MAAM,EAAEtB,WADN;AAEFuB,UAAAA,QAAQ,EAAEd,SAAS,CAACR,GAAV,CAAc,UAACuB,OAAD,EAAa;AACjC,gBAAIC,OAAJ,EAAaC,UAAb,EAAyBC,OAAzB,EAAkCC,UAAlC;;AACA,kBAAKtC,cAAL,CAAoB,UAACE,CAAD,EAAIG,CAAJ,EAAOC,CAAP,EAAa;AAC7B6B,cAAAA,OAAO,kBAAWjC,CAAX,eAAiBG,CAAjB,eAAuBC,CAAvB,UAAP;AACA8B,cAAAA,UAAU,kBAAWlC,CAAX,eAAiBG,CAAjB,eAAuBC,CAAvB,SAAV;AACH,aAHD;;AAIA,kBAAKN,cAAL,CAAoB,UAACE,CAAD,EAAIG,CAAJ,EAAOC,CAAP,EAAa;AAC7B+B,cAAAA,OAAO,kBAAWnC,CAAX,eAAiBG,CAAjB,eAAuBC,CAAvB,UAAP;AACAgC,cAAAA,UAAU,kBAAWpC,CAAX,eAAiBG,CAAjB,eAAuBC,CAAvB,SAAV;AACH,aAHD;;AAIA,mBAAO;AACHiC,cAAAA,KAAK,EAAEC,MAAM,CAACC,IAAP,CAAYP,OAAZ,EAAqB,CAArB,CADJ;AAEHH,cAAAA,IAAI,EAAES,MAAM,CAACE,MAAP,CAAcR,OAAd,EAAuB,CAAvB,CAFH;AAGHS,cAAAA,eAAe,EAAER,OAHd;AAIHS,cAAAA,WAAW,EAAER,UAJV;AAKHS,cAAAA,oBAAoB,EAAER,OALnB;AAMHS,cAAAA,gBAAgB,EAAER,UANf;AAOHS,cAAAA,gBAAgB,EAAE,CAPf;AAQHC,cAAAA,yBAAyB,EAAEX,OARxB;AASHY,cAAAA,qBAAqB,EAAEX,UATpB;AAUHY,cAAAA,qBAAqB,EAAE,CAVpB;AAWHC,cAAAA,WAAW,EAAE,CAXV;AAYHC,cAAAA,WAAW,EAAE;AAZV,aAAP;AAcH,WAxBS;AAFR,SAFoB;AA8B1BC,QAAAA,OAAO,EAAE;AACLC,UAAAA,QAAQ,EAAE;AACNC,YAAAA,IAAI,EAAE;AACFC,cAAAA,OAAO,EAAE;AADP;AADA;AADL;AA9BiB,OAAlB,CAAZ;AAsCA3B,MAAAA,KAAK,CAAC4B,MAAN,CAAa;AACTC,QAAAA,QAAQ,EAAE,GADD;AAETC,QAAAA,IAAI,EAAE,KAFG;AAGTC,QAAAA,MAAM,EAAE;AAHC,OAAb;AAKH,K;;;;;;;6BAEO;AACJ,aAAQ;AAAQ,QAAA,EAAE,EAAC,OAAX;AAAmB,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,OAArC;AAA8C,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH;;;;EA1EmBrE,S;;IA6ElBsE,Y;;;;;;;;;;;;;6BACO;AACL,UAAI,KAAKH,KAAL,CAAWI,OAAf,EAAwB;AACpB,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAEnE,cAAlB;AAAkC,UAAA,OAAO,EAAC,KAA1C;AAAgD,UAAA,MAAM,EAAC,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ,CADJ;AAOH,OARD,MAQO;AACH,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACH;AACJ;;;;EAbsBJ,S;;AAgB3B,eAAesE,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport _ from 'lodash';\nimport Moment from 'moment';\nimport Chart from 'chart.js';\nimport MockDadosChart from 'app/mocks/MockDadosChart';\n\nclass GeraChart extends Component{\n    _geraRGBRandom = (callback) => {\n        let r = Math.random() * 255 + 1, g = Math.random() * 255 + 1, b = Math.random() * 255 + 1;\n        if (typeof callback === 'function') {\n            return callback(r, g, b);\n        } else {\n            return [r, g, b];\n        }\n    }\n    \n    componentDidMount = () => {\n        let dataSet = require('../../mocks/ojogo');\n        let labelsChart = _.map(dataSet.registros, (registro) => { \n            return Moment(registro.dia + \" \" + registro.hora).format(\"MM/DD/YYYY HH:mm[h]\");\n        });\n        let dadosChart = _.map(dataSet.registros, (registro) => { return registro.termos });\n\n        let _datasets = [];\n        _.map(dadosChart[0], (item, palavraChave) => {\n            let elementos = [];\n            _.find(dadosChart, (itens) => {\n                elementos.push(itens[palavraChave]);\n            });\n            _datasets.push({[palavraChave]: elementos});\n        });\n\n        let canvas = document.getElementById(\"chart\");\n        let chart = new Chart(canvas, {\n            type: \"line\",\n            data: {\n                labels: labelsChart,\n                datasets: _datasets.map((dataset) => {\n                    let bgLinha, bordaLinha, bgPonto, bordaPonto;\n                    this._geraRGBRandom((r, g, b) => {\n                        bgLinha = `rgba(${r}, ${g}, ${b}, .1)`;\n                        bordaLinha = `rgba(${r}, ${g}, ${b}, 1)`;\n                    });\n                    this._geraRGBRandom((r, g, b) => {\n                        bgPonto = `rgba(${r}, ${g}, ${b}, .3)`;\n                        bordaPonto = `rgba(${r}, ${g}, ${b}, 1)`;\n                    });\n                    return {\n                        label: Object.keys(dataset)[0],\n                        data: Object.values(dataset)[0], \n                        backgroundColor: bgLinha,\n                        borderColor: bordaLinha,\n                        pointBackgroundColor: bgPonto,\n                        pointBorderColor: bordaPonto,\n                        pointBorderWidth: 2,\n                        pointHoverBackgroundColor: bgPonto,\n                        pointHoverBorderColor: bordaPonto,\n                        pointHoverBorderWidth: 2,\n                        borderWidth: 2,\n                        pointRadius: 5\n                    }\n                }),\n            },\n            options: {\n                elements: {\n                    line: {\n                        tension: 0\n                    }\n                }\n            }\n        });\n        chart.render({\n            duration: 600,\n            lazy: false,\n            easing: \"easeOutExpo\"\n        })\n    }\n\n    render(){\n        return (<canvas id=\"chart\" width={this.props.largura} height={this.props.altura} ></canvas>)\n    }\n}\n\nclass ViewGraficos extends Component {\n    render() {\n        if (this.props.visivel) {\n            return (\n                <div>\n                    <div className=\"grafico\">\n                        <GeraChart dados={MockDadosChart} largura=\"200\" altura=\"100\" />\n                    </div>\n                </div>\n            )\n        } else {\n            return (<div></div>)\n        }\n    }\n}\n\nexport default ViewGraficos;"]},"metadata":{},"sourceType":"module"}